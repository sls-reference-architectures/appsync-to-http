service: appsyncToHttp-gql

configValidationMode: error

provider:
  name: aws
  logRetentionInDays: 7
  region: us-east-1
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: com.reference-architecture.deploys
    maxPreviousDeploymentArtifacts: 5
    serverSideEncryption: AES256
  tags:
    lumigo:auto-trace: 'true'

custom:
  esbuild:
    minify: true
  prune:
    automatic: true
    number: 1

appSync:
  name: appsync-to-http
  schema: appSync/schema.api.graphql
  authentication:
    type: API_KEY
  additionalAuthentications:
  - type: AWS_IAM
  apiKeys:
  - name: test
    description: The test api key
    expiresAfter: 300d
  logging:
    level: ALL
    retentionInDays: 3
  resolvers:
    Query.getProduct:
      kind: UNIT
      dataSource: ProductsService
      code: appSync/resolvers/getProduct.js
    Query.getProductInternal:
      kind: UNIT
      dataSource: ProductsService
      code: appSync/resolvers/getProduct.js
    Query.getProducts:
      kind: UNIT
      dataSource: ProductsService
      code: appSync/resolvers/getProducts.js  
    Mutation.createProduct:
      kind: UNIT
      dataSource: ProductsService
      code: appSync/resolvers/createProduct.js
    Query.getProductV2:
      kind: UNIT
      dataSource: ProductsService
      code: appSync/resolvers/getProductV2.js
  dataSources:
  - ${file(appSync/dataSources/products.yml)}
  - ${file(appSync/dataSources/echo.yml)}

plugins:
- serverless-appsync-plugin
- serverless-esbuild
- serverless-iam-roles-per-function
- serverless-deployment-bucket
- serverless-prune-plugin

functions:
  echo:
    handler: appSync/src/handlers.echo

## Events

resources:
  Outputs:
    GraphQLApiUrl:
      Value: ${appsync:url}
    GraphQLApiKey:
      Value: ${appsync:apiKey.test}