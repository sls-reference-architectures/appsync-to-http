type Query {
  getProduct(input: GetProductInput!): Product!
  getProducts(input: GetProductsInput!): Products!
  getProductV2(input: GetProductInput!): ProductV2!
  getProductJS(input: GetProductInput!): Product!
  getProductJSInternal(input: GetProductInput!): Product! @aws_iam
}

type Mutation {
  createProduct(input: CreateProductInput!): CreateProductResult!
}

input GetProductInput {
  storeId: String!
  productId: String!
}

input CreateProductInput {
  metadata: ProductMetadataInput!
  name: String!
  price: Int!
  storeId: String!
}

input ProductMetadataInput {
  createdBy: String!
  sourceId: String!
}

input GetProductsInput {
  storeId: String!
  limit: Int
  cursor: String
}

type Product @aws_iam @aws_api_key {
  metadata: ProductMetadata!
  name: String!
  price: Int!
  productId: String!
  storeId: String!
}

type ProductV2 {
  metadata: ProductMetadata!
  name: String!
  cost: Int!
  productId: String!
  storeId: String!
}

type ProductMetadata @aws_iam @aws_api_key {
  createdBy: String!
  sourceId: String!
}

type CreateProductResult {
  productId: String!
}

type Products {
  items: [Product!]!
  cursor: String
}
